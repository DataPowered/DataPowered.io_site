set.seed( 158664 )
annotated_events <- better_labels +
geom_label( aes( x = Date, y = 160 + rnorm( nrow( views_time_events ), 0, 25 ),
label = str_wrap( Event_1, width = 18 ) ),
size = 3, angle = 90, color = "navy" )
print( annotated_events )
# Adding text now:
set.seed( 1586604 )
annotated_events <- better_labels +
geom_label( aes( x = Date, y = 160 + rnorm( nrow( views_time_events ), 0, 25 ),
label = str_wrap( Event_1, width = 18 ) ),
size = 3, angle = 90, color = "navy" )
print( annotated_events )
# Adding text now:
set.seed( 15866004 )
annotated_events <- better_labels +
geom_label( aes( x = Date, y = 160 + rnorm( nrow( views_time_events ), 0, 25 ),
label = str_wrap( Event_1, width = 18 ) ),
size = 3, angle = 90, color = "navy" )
print( annotated_events )
# Adding text now:
set.seed( 158666004 )
annotated_events <- better_labels +
geom_label( aes( x = Date, y = 160 + rnorm( nrow( views_time_events ), 0, 25 ),
label = str_wrap( Event_1, width = 18 ) ),
size = 3, angle = 90, color = "navy" )
print( annotated_events )
# Adding text now:
set.seed( 15666004 )
annotated_events <- better_labels +
geom_label( aes( x = Date, y = 160 + rnorm( nrow( views_time_events ), 0, 25 ),
label = str_wrap( Event_1, width = 18 ) ),
size = 3, angle = 90, color = "navy" )
print( annotated_events )
# Adding text now:
set.seed( 1566604 )
annotated_events <- better_labels +
geom_label( aes( x = Date, y = 160 + rnorm( nrow( views_time_events ), 0, 25 ),
label = str_wrap( Event_1, width = 18 ) ),
size = 3, angle = 90, color = "navy" )
print( annotated_events )
c( geom_point( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 2 ),
geom_line( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 1 ),
annotated_events$layers )
annotated_events
annotated_events$layers
# Why not also add total (non-unique) page views? Insert that UNDER all pre-existing layers:
annotated_events$layers <- c( geom_point( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 2 ),
geom_line( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 1 ),
annotated_events$layers )
print( annotated_events )
base <- ggplot( data = views_time_events,
aes( x = Date, y = cumsum( UniquePageViews ) ) ) +
# geom_vline goes in first to be *underneath* the lines and points.
geom_vline( xintercept = views_time_events[ ! is.na( Event_1 ), Date ],
linetype = 2, color = "navy", alpha = 0.35, lwd = 1 ) +
geom_point( size = 2 ) +
geom_line( size = 1 )
print( base )
# But there are improvements to be made:
better_labels <- base +
ggtitle( "Daily views over time, against labelled Git commits" ) +
ylab( "Views" ) +
xlab( "Date" ) +
scale_x_date( breaks = date_breaks( "months" ), labels = date_format( "%b-%y" ) )
print( better_labels )
# Adding text now:
set.seed( 1566604 )
annotated_events <- better_labels +
geom_label( aes( x = Date, y = 160 + rnorm( nrow( views_time_events ), 0, 25 ),
label = str_wrap( Event_1, width = 18 ) ),
size = 3, angle = 90, color = "navy" )
print( annotated_events )
# Why not also add total (non-unique) page views? Insert that UNDER all pre-existing layers:
annotated_events$layers <- c( geom_point( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 2 ),
geom_line( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 1 ),
annotated_events$layers )
print( annotated_events )
annotated_events +
annotate( "text",
y = max( cumsum( views_time_events$UniquePageViews ) ),
x = max( views_time_events$Date ) + 5,
label = str_wrap( "Unique page views", width = 7 ),
size = 3 ) +
annotate( "text",
y = max( cumsum( views_time_events$PageViews ) ),
x = max( views_time_events$Date ) + 5,
label = str_wrap( "Page views", width = 7 ),
size = 3,
color = "red" )
# Packages ----------------------------------------------------------------
library( data.table )
library( stringr )
library( plyr )
library( tidyr )
library( scales ) # to access breaks/formatting functions
library( ggplot2 )
# Read in data ------------------------------------------------------------
git_commits <- fread( "/home/caterina/Documents/DataPoweredIO/victor-hugo-website/site/content/datasets/2018-08-12-data-event-graph/Events.csv", sep = "~", header = FALSE )
setnames( git_commits, c( "User", "Date", "Event" ) )
# Actually might remove user name as not particularly relevant here:
git_commits[ , User := NULL ]
google_analytics_measures <- fread( "/home/caterina/Documents/DataPoweredIO/victor-hugo-website/site/content/datasets/2018-08-12-data-event-graph/Analytics20171001-20180811.csv" )
setnames( google_analytics_measures, c( "Date", "PageViews", "UniquePageViews", "AverageTimeOnPage" ) )
# Data prep ---------------------------------------------------------------
git_commits[ , Date := substr( Date, 1, 10 ) ]
git_commits[ , Date := as.Date( Date, format = "%Y-%m-%d" ) ]
# Switch to wide format so there is just one date per row.
git_commits_wide <- aggregate( Event ~ Date,
FUN = function( x ){ paste( x, collapse = "___" ) },
data = git_commits )
git_commits_wide <- separate( git_commits_wide, Event, into = paste( "Event", 1:9, sep = "_"), sep = "___" )
google_analytics_measures[ , Date := as.Date( Date, format = "%m/%d/%y" ) ]
views_time_events <- join( google_analytics_measures, git_commits_wide, by = "Date" )
setDT( views_time_events )
# Maybe skip Oct/Nov as there are too many commits merely for setting up site. Not super relevant
views_time_events <- views_time_events[ Date > "2017-10-20", ]
# Graphs ------------------------------------------------------------------
# Step 1: fairly simple plot:
base <- ggplot( data = views_time_events,
aes( x = Date, y = cumsum( UniquePageViews ) ) ) +
# geom_vline goes in first to be *underneath* the lines and points.
geom_vline( xintercept = views_time_events[ ! is.na( Event_1 ), Date ],
linetype = 2, color = "navy", alpha = 0.35, lwd = 1 ) +
geom_point( size = 2 ) +
geom_line( size = 1 )
print( base )
# But there are improvements to be made:
better_labels <- base +
ggtitle( "Daily views over time, against labelled Git commits" ) +
ylab( "Views" ) +
xlab( "Date" ) +
scale_x_date( breaks = date_breaks( "months" ), labels = date_format( "%b-%y" ) )
print( better_labels )
# Adding text now:
set.seed( 1566604 )
annotated_events <- better_labels +
geom_label( aes( x = Date, y = 160 + rnorm( nrow( views_time_events ), 0, 25 ),
label = str_wrap( Event_1, width = 18 ) ),
size = 3, angle = 90, color = "navy" )
print( annotated_events )
# Why not also add total (non-unique) page views? Insert that UNDER all pre-existing layers:
annotated_events$layers <- c( geom_point( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 2 ),
geom_line( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 1 ),
annotated_events$layers )
print( annotated_events )
annotated_events +
annotate( "text",
y = max( cumsum( views_time_events$UniquePageViews ) ),
x = max( views_time_events$Date ) + 5,
label = str_wrap( "Unique page views", width = 7 ),
size = 3 ) +
annotate( "text",
y = max( cumsum( views_time_events$PageViews ) ),
x = max( views_time_events$Date ) + 5,
label = str_wrap( "Page views", width = 7 ),
size = 3,
color = "red" )
# Packages ----------------------------------------------------------------
library( data.table )
library( stringr )
library( plyr )
library( tidyr )
library( scales ) # to access breaks/formatting functions
library( ggplot2 )
# Read in data ------------------------------------------------------------
git_commits <- fread( "/home/caterina/Documents/DataPoweredIO/victor-hugo-website/site/content/datasets/2018-08-12-data-event-graph/Events.csv", sep = "~", header = FALSE )
setnames( git_commits, c( "User", "Date", "Event" ) )
# Actually might remove user name as not particularly relevant here:
git_commits[ , User := NULL ]
google_analytics_measures <- fread( "/home/caterina/Documents/DataPoweredIO/victor-hugo-website/site/content/datasets/2018-08-12-data-event-graph/Analytics20171001-20180811.csv" )
setnames( google_analytics_measures, c( "Date", "PageViews", "UniquePageViews", "AverageTimeOnPage" ) )
# Data prep ---------------------------------------------------------------
git_commits[ , Date := substr( Date, 1, 10 ) ]
git_commits[ , Date := as.Date( Date, format = "%Y-%m-%d" ) ]
# Switch to wide format so there is just one date per row.
git_commits_wide <- aggregate( Event ~ Date,
FUN = function( x ){ paste( x, collapse = "___" ) },
data = git_commits )
git_commits_wide <- separate( git_commits_wide, Event, into = paste( "Event", 1:9, sep = "_"), sep = "___" )
google_analytics_measures[ , Date := as.Date( Date, format = "%m/%d/%y" ) ]
views_time_events <- join( google_analytics_measures, git_commits_wide, by = "Date" )
setDT( views_time_events )
# Maybe skip Oct/Nov as there are too many commits merely for setting up site. Not super relevant
views_time_events <- views_time_events[ Date > "2017-10-20", ]
# Graphs ------------------------------------------------------------------
# Step 1: fairly simple plot:
base <- ggplot( data = views_time_events,
aes( x = Date, y = cumsum( UniquePageViews ) ) ) +
# geom_vline goes in first to be *underneath* the lines and points.
geom_vline( xintercept = views_time_events[ ! is.na( Event_1 ), Date ],
linetype = 2, color = "navy", alpha = 0.35, lwd = 1 ) +
geom_point( size = 2 ) +
geom_line( size = 1 )
print( base )
# But there are improvements to be made:
better_labels <- base +
ggtitle( "Daily views over time, against labelled Git commits" ) +
ylab( "Views" ) +
xlab( "Date" ) +
scale_x_date( breaks = date_breaks( "months" ), labels = date_format( "%b-%y" ) )
print( better_labels )
# Adding text now:
set.seed( 1566604 )
annotated_events <- better_labels +
geom_label( aes( x = Date, y = 160 + rnorm( nrow( views_time_events ), 0, 25 ),
label = str_wrap( Event_1, width = 18 ) ),
size = 3, angle = 90, color = "navy" )
print( annotated_events )
# Adding text now:
set.seed( 1566604 )
# Why not also add total (non-unique) page views? Insert that UNDER all pre-existing layers:
annotated_events$layers <- c( geom_point( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 2 ),
geom_line( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 1 ),
annotated_events$layers )
print( annotated_events )
annotated_events +
annotate( "text",
y = max( cumsum( views_time_events$UniquePageViews ) ),
x = max( views_time_events$Date ) + 5,
label = str_wrap( "Unique page views", width = 7 ),
size = 3 ) +
annotate( "text",
y = max( cumsum( views_time_events$PageViews ) ),
x = max( views_time_events$Date ) + 5,
label = str_wrap( "Page views", width = 7 ),
size = 3,
color = "red" )
# Packages ----------------------------------------------------------------
library( data.table )
library( stringr )
library( plyr )
library( tidyr )
library( scales ) # to access breaks/formatting functions
library( ggplot2 )
# Read in data ------------------------------------------------------------
git_commits <- fread( "/home/caterina/Documents/DataPoweredIO/victor-hugo-website/site/content/datasets/2018-08-12-data-event-graph/Events.csv", sep = "~", header = FALSE )
setnames( git_commits, c( "User", "Date", "Event" ) )
# Actually might remove user name as not particularly relevant here:
git_commits[ , User := NULL ]
google_analytics_measures <- fread( "/home/caterina/Documents/DataPoweredIO/victor-hugo-website/site/content/datasets/2018-08-12-data-event-graph/Analytics20171001-20180811.csv" )
setnames( google_analytics_measures, c( "Date", "PageViews", "UniquePageViews", "AverageTimeOnPage" ) )
# Data prep ---------------------------------------------------------------
git_commits[ , Date := substr( Date, 1, 10 ) ]
git_commits[ , Date := as.Date( Date, format = "%Y-%m-%d" ) ]
# Switch to wide format so there is just one date per row.
git_commits_wide <- aggregate( Event ~ Date,
FUN = function( x ){ paste( x, collapse = "___" ) },
data = git_commits )
git_commits_wide <- separate( git_commits_wide, Event, into = paste( "Event", 1:9, sep = "_"), sep = "___" )
google_analytics_measures[ , Date := as.Date( Date, format = "%m/%d/%y" ) ]
views_time_events <- join( google_analytics_measures, git_commits_wide, by = "Date" )
setDT( views_time_events )
# Maybe skip Oct/Nov as there are too many commits merely for setting up site. Not super relevant
views_time_events <- views_time_events[ Date > "2017-10-20", ]
# Graphs ------------------------------------------------------------------
# Step 1: fairly simple plot:
base <- ggplot( data = views_time_events,
aes( x = Date, y = cumsum( UniquePageViews ) ) ) +
# geom_vline goes in first to be *underneath* the lines and points.
geom_vline( xintercept = views_time_events[ ! is.na( Event_1 ), Date ],
linetype = 2, color = "navy", alpha = 0.35, lwd = 1 ) +
geom_point( size = 2 ) +
geom_line( size = 1 )
print( base )
# But there are improvements to be made:
better_labels <- base +
ggtitle( "Daily views over time, against labelled Git commits" ) +
ylab( "Views" ) +
xlab( "Date" ) +
scale_x_date( breaks = date_breaks( "months" ), labels = date_format( "%b-%y" ) )
print( better_labels )
# Adding text now:
# set.seed( 1566604 )
annotated_events <- better_labels +
geom_label( aes( x = Date, y = 160 + rnorm( nrow( views_time_events ), 0, 25 ),
label = str_wrap( Event_1, width = 18 ) ),
size = 3, angle = 90, color = "navy" )
print( annotated_events )
# Adding text now:
set.seed( 1566604 )
# Why not also add total (non-unique) page views? Insert that UNDER all pre-existing layers:
annotated_events$layers <- c( geom_point( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 2 ),
geom_line( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 1 ),
annotated_events$layers )
print( annotated_events )
annotated_events +
annotate( "text",
y = max( cumsum( views_time_events$UniquePageViews ) ),
x = max( views_time_events$Date ) + 5,
label = str_wrap( "Unique page views", width = 7 ),
size = 3 ) +
annotate( "text",
y = max( cumsum( views_time_events$PageViews ) ),
x = max( views_time_events$Date ) + 5,
label = str_wrap( "Page views", width = 7 ),
size = 3,
color = "red" )
# Packages ----------------------------------------------------------------
library( data.table )
library( stringr )
library( plyr )
library( tidyr )
library( scales ) # to access breaks/formatting functions
library( ggplot2 )
# Read in data ------------------------------------------------------------
git_commits <- fread( "/home/caterina/Documents/DataPoweredIO/victor-hugo-website/site/content/datasets/2018-08-12-data-event-graph/Events.csv", sep = "~", header = FALSE )
setnames( git_commits, c( "User", "Date", "Event" ) )
# Actually might remove user name as not particularly relevant here:
git_commits[ , User := NULL ]
google_analytics_measures <- fread( "/home/caterina/Documents/DataPoweredIO/victor-hugo-website/site/content/datasets/2018-08-12-data-event-graph/Analytics20171001-20180811.csv" )
setnames( google_analytics_measures, c( "Date", "PageViews", "UniquePageViews", "AverageTimeOnPage" ) )
# Data prep ---------------------------------------------------------------
git_commits[ , Date := substr( Date, 1, 10 ) ]
git_commits[ , Date := as.Date( Date, format = "%Y-%m-%d" ) ]
# Switch to wide format so there is just one date per row.
git_commits_wide <- aggregate( Event ~ Date,
FUN = function( x ){ paste( x, collapse = "___" ) },
data = git_commits )
git_commits_wide <- separate( git_commits_wide, Event, into = paste( "Event", 1:9, sep = "_"), sep = "___" )
google_analytics_measures[ , Date := as.Date( Date, format = "%m/%d/%y" ) ]
views_time_events <- join( google_analytics_measures, git_commits_wide, by = "Date" )
setDT( views_time_events )
# Maybe skip Oct/Nov as there are too many commits merely for setting up site. Not super relevant
views_time_events <- views_time_events[ Date > "2017-10-20", ]
# Graphs ------------------------------------------------------------------
# Step 1: fairly simple plot:
base <- ggplot( data = views_time_events,
aes( x = Date, y = cumsum( UniquePageViews ) ) ) +
# geom_vline goes in first to be *underneath* the lines and points.
geom_vline( xintercept = views_time_events[ ! is.na( Event_1 ), Date ],
linetype = 2, color = "navy", alpha = 0.35, lwd = 1 ) +
geom_point( size = 2 ) +
geom_line( size = 1 )
print( base )
# But there are improvements to be made:
better_labels <- base +
ggtitle( "Daily views over time, against labelled Git commits" ) +
ylab( "Views" ) +
xlab( "Date" ) +
scale_x_date( breaks = date_breaks( "months" ), labels = date_format( "%b-%y" ) )
print( better_labels )
# Adding text now:
# set.seed( 1566604 )
annotated_events <- better_labels +
geom_label( aes( x = Date, y = 160 + rnorm( nrow( views_time_events ), 0, 25 ),
label = str_wrap( Event_1, width = 18 ) ),
size = 3, angle = 90, color = "navy" )
print( annotated_events )
# Adding text now:
set.seed( 1566604 )
# Why not also add total (non-unique) page views? Insert that UNDER all pre-existing layers:
annotated_events$layers <- c( geom_point( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 2 ),
geom_line( aes( x = Date, y = cumsum( PageViews ) ),
color = "red", alpha = 0.25,
size = 1 ),
annotated_events$layers )
print( annotated_events )
annotated_events +
annotate( "text",
y = max( cumsum( views_time_events$UniquePageViews ) ),
x = max( views_time_events$Date ) + 5,
label = str_wrap( "Unique page views", width = 7 ),
size = 3 ) +
annotate( "text",
y = max( cumsum( views_time_events$PageViews ) ),
x = max( views_time_events$Date ) + 5,
label = str_wrap( "Page views", width = 7 ),
size = 3,
color = "red" )
shiny::runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
View(nested_diseases)
options(scipen=999)
View(nested_diseases)
View(nested_diseases)
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
shiny::runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
?tabsetPanel
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
runApp('Documents/TDL_PrivateRepos/ScotGovAccelerator')
library( data.table )
library( stringr )
library( plyr )
library( tidyr )
library( ggplot2 )
library( scales ) # to access breaks/formatting functions
library( gridExtra )
library( ggthemr )
ggthemr( "chalk", type = "outer", layout = "scientific", spacing = 2 )
setwd( "/home/caterina/Documents/DataPoweredIO/victor-hugo-website/site/content" )
# Reading in GitHub log, specifying the ~ separator we used earlier.
git_commits <- fread( "./datasets/2018-08-18-post-linking-google-analytics-data-to-website-changes-or-github-commits/Events.csv",
sep = "~", header = FALSE )
setnames( git_commits, c( "User", "Date", "Event" ) )
# In this case, almost all commits are from the same user, so shall remove from data:
git_commits[ , User := NULL ]
google_analytics_measures <- fread( "./datasets/2018-08-18-post-linking-google-analytics-data-to-website-changes-or-github-commits/Analytics20171001-20180811.csv" )
setnames( google_analytics_measures, c( "Date", "PageViews", "UniquePageViews", "AverageTimeOnPage" ) )
google_analytics_measures
o
# Converting to Date class:
google_analytics_measures[ , Date := as.Date( Date, format = "%m/%d/%y" ) ]
# Extracting justthe  date part from full string, and also converting to Date class:
git_commits[ , Date := substr( Date, 1, 10 ) ]
git_commits[ , Date := as.Date( Date, format = "%Y-%m-%d" ) ]
git_commits_wide <- aggregate( Event ~ Date,
FUN = function( x ){ paste( x, collapse = "___" ) },
data = git_commits )
# Find the maximum number of commits in a day, i.e., the no. of columns to split text across:
maximum_commits_in_a_day <- max( table( git_commits$Date ) )
git_commits_wide <- separate( git_commits_wide,
Event,
into = paste( "Event", 1 : maximum_commits_in_a_day, sep = "_"),
sep = "___" )
# Finally, join by date is now possible:
views_time_events <- join( google_analytics_measures, git_commits_wide, by = "Date" )
setDT( views_time_events )
views_time_events
single_event_index
views_time_events
# Maybe skip Oct/Nov as there are too many commits merely for setting up site. Not super relevant
views_time_events <- views_time_events[ Date > "2017-10-20", ]
# Create an index of events to annotate on the plot:
single_event_index <- na.exclude( views_time_events[ , c( "Date", "Event_1" ) ] )
single_event_index <- cbind( Event = LETTERS[ 1 : nrow( single_event_index ) ], single_event_index )
names( single_event_index ) <- c( "Event", "Date", "Description" )
single_event_index
# Setting the scene:
ggplot( data = views_time_events,
aes( x = Date, y = cumsum( UniquePageViews ) ) ) +
# Marking location of events, and labelling them with letters:
geom_vline( xintercept = views_time_events[ ! is.na( Event_1 ), Date ],
lwd = 0.5, color = "white" ) +
geom_label( data = single_event_index,
aes( x = Date, y = -10,
label = LETTERS[ 1 : nrow( single_event_index ) ] ),
#str_wrap( Event_1, width = 18 )
size = 5, angle = 90,
color = "black", fontface = 2 ) +
# Draw line of cumulative page views, and label it:
geom_line( aes( x = Date, y = cumsum( PageViews ) ),
color = "#fcc49f", size = 2 ) +
annotate( "text",
y = max( cumsum( views_time_events$PageViews ) ),
x = max( views_time_events$Date ) + 12,
label = str_wrap( "Page views", width = 15 ),
size = 4.5, fontface = 1,
color = "#fcc49f" ) +
# Draw line of cumulative UNIQUE page views, and label it also:
geom_line( size = 2, color = "#f46036" ) +
annotate( "text",
y = max( cumsum( views_time_events$UniquePageViews ) ),
x = max( views_time_events$Date ) + 12,
label = str_wrap( "Unique page views", width = 15 ),
size = 4.5, fontface = 1,
color = "#f46036" ) +
# Tweak the theme and surrounding text:
theme( text = element_text( size = 16 ),
axis.text.x = element_text( angle = 90 ) ) +
ggtitle( "Cumulative views over time, given labelled Git commits" ) +
ylab( "Views" ) +
xlab( "Date" ) +
scale_x_date( breaks = date_breaks( "months" ), labels = date_format( "%b-%y" ) ) +
# Add event index as grob - will serve as a legend for the letter codes:
annotation_custom( tableGrob( data.frame( single_event_index ),
rows = NULL,
theme = ttheme_default( base_size = 11,
core = list( fg_params = list( hjust = 0, x = 0 ) ),
rowhead = list( fg_params = list( hjust = 0, x = 0 ) ) ) ),
xmin = quantile( as.numeric( views_time_events$Date ), probs = 0.22 ),
xmax = NA,
ymax = 247,
ymin = NA  )
